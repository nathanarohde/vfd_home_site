{"version":3,"sources":["Assets/vfd_finished_logo.png","Assets/chevron-first.svg","Assets/chevron-up.svg","Assets/chevron-down.svg","Components/Header/Header.js","Components/Navigation/Navigation.js","Components/TitleBox/TitleBox.js","Components/Cartoon/Cartoon.js","Components/Button/Button.js","Containers/Display/Display.js","Store/actions.js","Store/actionTypes.js","Components/Main/Main.js","Components/Thumbnail/Thumbnail.js","Containers/Archive/Archive.js","Containers/Layout/Layout.js","App.js","serviceWorker.js","Store/utility.js","Store/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","header","react_default","a","createElement","className","src","logo","alt","navigation","Link","to","titleBox","props","title","date","cartoon","source","button","disabled","onClick","clicked","children","Display","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleScroll","scrollHeight","document","documentElement","offsetHeight","scrollTop","keys","state","displayedCartoons","length","scrollHistory","currentDisplayedCartoon","undefined","refs","concat","offsetTop","displayField","promise","onDisplayPreviousCartoon","then","setRoute","lastCartoon","Math","ceil","setDisplayedCartoons","onDisplayNextCartoon","setState","url","axios","get","response","prevState","objectSpread","defineProperty","data","catch","error","console","log","firstCartoon","target","onSetCurrentDisplayedCartoon","setTimeout","window","scrollTo","top","behavior","perviousCartoon","container","nextCartoon","history","push","importedFunction","Promise","resolve","throttledFunction","lodash","throttle","_this2","addEventListener","parseInt","match","params","id","removeEventListener","prevProps","isNaN","_this3","cartoons","map","ref","key","TitleBox_TitleBox","Cartoon_Cartoon","Button_Button","chevron_first","chevron_up","chevron_down","Component","withRouter","connect","dispatch","type","currentCartoon","main","Containers_Display_Display","thumbnail","Archive","getThumbnails","thumbnails","i","Thumbnail","Layout","onInitLastCartoon","Header_Header","Navigation_Navigation","Switch","Route","path","component","Main","App","Containers_Layout_Layout","Boolean","location","hostname","updateObject","oldObject","updatedProperties","initialState","reducer","arguments","action","setLastCartoon","displayPreviousCartoon","displayNextCartoon","setCurrentDisplayedCartoon","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","basename","process","src_App_0","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60eebc0b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vfd_finished_logo.3a74bce1.png\";","module.exports = __webpack_public_path__ + \"static/media/chevron-first.eaff1e6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-up.4a6fc7db.svg\";","module.exports = __webpack_public_path__ + \"static/media/chevron-down.24a2a328.svg\";","import React from 'react'\r\nimport './Header.css'\r\nimport logo from '../../Assets/vfd_finished_logo.png'\r\n\r\nconst header = () => (\r\n  <div>\r\n    <header className=\"bannerBackground\">\r\n      <div className=\"Wrapper\">\r\n        <div className=\"logo-title-box\">\r\n         <h1><span className=\"emphasizeBannerTitle\">V</span>egetables for <span className=\"emphasizeBannerTitle\">D</span>essert</h1>\r\n         <img className=\"logo\" src={logo} alt=\"Clown Skull\"/>\r\n        </div>\r\n      </div>\r\n    </header>\r\n    <div className=\"Wrapper\">\r\n      <div className=\"halfCircle\"></div>\r\n      <div className=\"halfCircle\"></div>\r\n      <div className=\"halfCircle\"></div>\r\n      <div className=\"halfCircle\"></div>\r\n      <div className=\"halfCircle\"></div>\r\n      <div className=\"halfCircle\"></div>\r\n      <div className=\"halfCircle\"></div>\r\n      <div className=\"halfCircle\"></div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default header;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css'\r\n\r\nconst navigation = () => (\r\n  <nav className=\"Wrapper\">\r\n    <div className=\"circusSign\">\r\n      <Link to=\"/\">Home</Link>\r\n    </div>\r\n    <div className=\"circusSign\">\r\n      <Link to=\"/archive\">Archive</Link>\r\n    </div>\r\n  </nav>\r\n)\r\n\r\nexport default navigation;\r\n","import React from 'react'\r\nimport './TitleBox.css'\r\n\r\nconst titleBox = ( props ) => {\r\n\r\n  return (\r\n    <div className='titleBox'>\r\n      <h2>{ props.title }</h2>\r\n      <p>{ props.date }</p>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default titleBox;\r\n","import React from 'react';\r\nimport './Cartoon.css'\r\n\r\nlet cartoon = ( props ) => {\r\n  let source= 'https://github.com/nathanarohde/vfd_home_site/blob/master/src/Cartoons/' + props.source + '/Panels/1.jpg?raw=true'\r\n\r\n  return (\r\n    <div className=\"cartoonBox\">\r\n      <img src={ source } alt=\"Hillarious Cartoon\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default cartoon;\r\n","import React from 'react'\r\nimport './Button.css'\r\n\r\nconst button = ( props ) => (\r\n  <button\r\n      disabled={ props.disabled }\r\n      onClick={ props.clicked }> { props.children } </button>\r\n)\r\n\r\nexport default button;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport axios from 'axios';\r\nimport lodash from 'lodash';\r\n\r\nimport chevron_first from '../../Assets/chevron-first.svg';\r\nimport chevron_up from '../../Assets/chevron-up.svg';\r\nimport chevron_down from '../../Assets/chevron-down.svg';\r\n\r\nimport './Display.css'\r\nimport TitleBox from '../../Components/TitleBox/TitleBox';\r\nimport Cartoon from '../../Components/Cartoon/Cartoon';\r\nimport Button from '../../Components/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport * as actions from '../../Store/actions';\r\n\r\nclass Display extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      displayedCartoons: {},\r\n      scrollHistory: 0,\r\n    }\r\n    // Prevents memory leak\r\n    this.throttledFunction = lodash.throttle(this.handleScroll, 200);\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('scroll', this.throttledFunction, false);\r\n    // Necessary for Archive to work properly\r\n    if ( parseInt(this.props.match.params.id) > 0 ) {\r\n      this.setDisplayedCartoons( parseInt(this.props.match.params.id) );\r\n      this.props.onSetCurrentDisplayedCartoon( parseInt(this.props.match.params.id) );\r\n    } else {\r\n      // Redux not available until update\r\n      axios.get('https://raw.githubusercontent.com/nathanarohde/vfd_home_site/master/src/Cartoons/Cartoons.json')\r\n      .then( response => {\r\n        this.setDisplayedCartoons( response.data.lastCartoon );\r\n        this.props.onSetCurrentDisplayedCartoon(\r\n          parseInt(response.data.lastCartoon)\r\n        )\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('scroll', this.throttledFunction, false);\r\n  }\r\n\r\n  handleScroll = () => {\r\n    let scrollHeight = document.documentElement.offsetHeight + ( document.documentElement.scrollTop - document.documentElement.scrollHeight)\r\n\r\n    if ( Object.keys(this.state.displayedCartoons).length ) {\r\n      if ( scrollHeight < this.state.scrollHistory ) {\r\n        // Up\r\n        if ( this.props.currentDisplayedCartoon !== 1\r\n           && this.props.currentDisplayedCartoon - 1 in this.state.displayedCartoons\r\n           && this.refs[`${ this.props.currentDisplayedCartoon }`] !== undefined\r\n           && ( scrollHeight + 100 < this.refs[`${ this.props.currentDisplayedCartoon }`].offsetTop + ( document.documentElement.offsetHeight - this.refs.displayField.offsetHeight ) )\r\n         ){\r\n          this.promise(this.props.onDisplayPreviousCartoon())\r\n          .then( this.setRoute( this.props.currentDisplayedCartoon ))\r\n        }\r\n      } else {\r\n        // Down\r\n        // For cartoons that don't exist\r\n        if ( this.props.currentDisplayedCartoon < this.props.lastCartoon\r\n          && !( this.props.currentDisplayedCartoon + 1 in this.state.displayedCartoons )\r\n          // Undefined prevents errors when transferring from archive.\r\n          && this.refs[`${ this.props.currentDisplayedCartoon }`] !== undefined\r\n          && Math.ceil( scrollHeight )\r\n              > Math.ceil( this.refs[`${ this.props.currentDisplayedCartoon }`].offsetHeight + this.refs[`${ this.props.currentDisplayedCartoon }`].offsetTop )\r\n        ){\r\n          this.setDisplayedCartoons( this.props.currentDisplayedCartoon + 1 )\r\n          this.promise(this.props.onDisplayNextCartoon())\r\n          .then( this.setRoute( this.props.currentDisplayedCartoon ) );\r\n        // For already existing cartoons\r\n        } else if ( this.props.currentDisplayedCartoon + 1 in this.state.displayedCartoons\r\n          // This will sometimes trigger when using the Previous button - the line below prevents error\r\n          && this.refs[`${ this.props.currentDisplayedCartoon }`] !== undefined\r\n          && scrollHeight > this.refs[`${ this.props.currentDisplayedCartoon }`].offsetHeight + this.refs[`${ this.props.currentDisplayedCartoon }`].offsetTop + document.documentElement.offsetHeight - this.refs.displayField.offsetHeight\r\n        ){\r\n          this.promise( this.props.onDisplayNextCartoon() )\r\n          .then( this.setRoute( this.props.currentDisplayedCartoon ))\r\n        }\r\n      }\r\n      this.setState({scrollHistory: scrollHeight});\r\n    }\r\n  }\r\n\r\n  componentDidUpdate( prevProps ) {\r\n    // Redux not available until component did update\r\n    // In these three if scenarios there is no applicable cartoon so it is set to lastCartoon\r\n    if ( this.props.currentDisplayedCartoon === 0 ){\r\n      if (\r\n        parseInt(this.props.match.params.id) === undefined\r\n        || parseInt(this.props.match.params.id) <= 0\r\n        || parseInt(this.props.match.params.id) > this.props.lastCartoon\r\n        || isNaN(this.props.match.params.id)\r\n       ){\r\n          this.props.onSetCurrentDisplayedCartoon(\r\n            this.props.lastCartoon\r\n          );\r\n          this.setDisplayedCartoons( this.props.lastCartoon );\r\n          this.setRoute(this.props.lastCartoon);\r\n      } else {\r\n        this.props.onSetCurrentDisplayedCartoon( parseInt(this.props.match.params.id) );\r\n        this.setDisplayedCartoons( parseInt(this.props.match.params.id) );\r\n      }\r\n    }\r\n\r\n    // Eliminates calls which will fail.\r\n    if ( prevProps.currentDisplayedCartoon !== this.props.currentDisplayedCartoon\r\n      && this.props.currentDisplayedCartoon !== 0\r\n      && this.props.currentDisplayedCartoon <= this.props.lastCartoon ){\r\n        this.setDisplayedCartoons( this.props.currentDisplayedCartoon );\r\n    }\r\n  }\r\n\r\n  setDisplayedCartoons = ( cartoon ) => {\r\n    if (!(cartoon in this.state.displayedCartoons)){\r\n      let url = 'https://raw.githubusercontent.com/nathanarohde/vfd_home_site/master/src/Cartoons/' + cartoon + '/cartoon.json';\r\n      axios.get( url )\r\n      .then( response => {\r\n        this.setState( prevState => ({\r\n          displayedCartoons: {\r\n            ...prevState.displayedCartoons,\r\n            [cartoon]: {\r\n                date: response.data.date,\r\n                title: response.data.title\r\n            }\r\n          }\r\n        }))\r\n      })\r\n      .catch( error => {\r\n        console.log('Error');\r\n      })\r\n    }\r\n  };\r\n\r\n  firstCartoon = () => {\r\n    let target= this.refs.displayField;\r\n\r\n    this.promise( this.props.onSetCurrentDisplayedCartoon(1) )\r\n    .then(\r\n      setTimeout( function() {\r\n        window.scrollTo({\r\n          top: target.offsetTop,\r\n          behavior: 'auto'\r\n        })\r\n      }, 200), this.setRoute( 1 )\r\n    );\r\n  }\r\n\r\n  perviousCartoon = () => {\r\n    let container = this.refs.displayField;\r\n    let target = this.refs[`${ this.props.currentDisplayedCartoon - 1 }`] || 0;\r\n\r\n    this.promise( this.props.onDisplayPreviousCartoon() )\r\n    .then( setTimeout( function() {\r\n      window.scrollTo({\r\n        top: target.offsetTop + container.offsetTop,\r\n        behavior: 'auto'\r\n      })\r\n    }, 200), this.setRoute( this.props.currentDisplayedCartoon - 1)\r\n    );\r\n  }\r\n\r\n  nextCartoon = () => {\r\n    let container = this.refs.displayField;\r\n    let target= this.refs[`${ this.props.currentDisplayedCartoon }`];\r\n    this.promise( this.props.onDisplayNextCartoon() )\r\n    .then(\r\n      setTimeout( function() {\r\n        window.scrollTo({\r\n          top: target.offsetTop + target.scrollHeight + container.offsetTop,\r\n          behavior: 'auto'\r\n        })\r\n      }, 200), this.setRoute( this.props.currentDisplayedCartoon + 1 )\r\n    );\r\n  }\r\n\r\n  setRoute = ( target ) => {\r\n    this.props.history.push(`/${ target }`);\r\n  }\r\n\r\n  promise = ( importedFunction ) => {\r\n    return new Promise(function(resolve, importedFunction){\r\n      resolve( importedFunction );\r\n    })\r\n  }\r\n\r\n  render () {\r\n    let cartoons = <p>Site is loading.</p>\r\n\r\n    if (Object.keys(this.state.displayedCartoons).length){\r\n      cartoons = Object.keys(this.state.displayedCartoons).map( cartoon => {\r\n        return (\r\n          <div className=\"displayedCartoon\" ref={cartoon} key={cartoon}>\r\n            <TitleBox date={ this.state.displayedCartoons[cartoon].date } title={ this.state.displayedCartoons[cartoon].title }/>\r\n            <Cartoon key={ cartoon } source={ cartoon } />\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div id=\"displayField\" ref=\"displayField\">\r\n        { cartoons }\r\n        { this.refs.displayField !== undefined\r\n          && this.state.scrollHistory > this.refs.displayField.offsetTop\r\n          &&\r\n          <div className=\"buttonFixedContainer\">\r\n            <div className=\"buttonBox\">\r\n              { this.props.currentDisplayedCartoon !== 1 &&\r\n                <Button\r\n                  clicked={ this.firstCartoon }>\r\n                  <Link to={`/${ 1 }`}>\r\n                    <img src={ chevron_first } alt=\"Previous Cartoon\"/>\r\n                  </Link>\r\n                </Button>\r\n              }\r\n              { this.props.currentDisplayedCartoon > 1 &&\r\n                <Button\r\n                  clicked={ this.perviousCartoon }>\r\n                  <Link to={`/${ this.props.currentDisplayedCartoon - 1 }`}>\r\n                    <img src={ chevron_up } alt=\"Previous Cartoon\"/>\r\n                  </Link>\r\n                </Button>\r\n              }\r\n              { this.props.currentDisplayedCartoon < this.props.lastCartoon  &&\r\n                <Button\r\n                  clicked={ this.nextCartoon }>\r\n                  <Link to={`/${ this.props.currentDisplayedCartoon + 1 }`}>\r\n                    <img src={ chevron_down } alt=\"Next Cartoon\"/>\r\n                  </Link>\r\n                </Button>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentDisplayedCartoon: state.currentDisplayedCartoon,\r\n    lastCartoon: state.lastCartoon\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onDisplayPreviousCartoon: () => dispatch(actions.displayPreviousCartoon()),\r\n    onDisplayNextCartoon: () => dispatch(actions.displayNextCartoon()),\r\n    onSetCurrentDisplayedCartoon: (currentCartoon) => dispatch(actions.setCurrentDisplayedCartoon(currentCartoon))\r\n  }\r\n}\r\n\r\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( Display ) );\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const setLastCartoon = ( data ) => {\r\n  return {\r\n    type: actionTypes.SET_LASTCARTOON,\r\n    lastCartoon: data\r\n  }\r\n}\r\n\r\nexport const setCurrentDisplayedCartoon = ( data ) => {\r\n  return {\r\n    type: actionTypes.SET_CURRENT_DISPLAYED_CARTOONS,\r\n    currentDisplayedCartoon: data\r\n  }\r\n}\r\n\r\nexport const displayPreviousCartoon = ( ) => {\r\n  return {\r\n    type: actionTypes.DISPLAY_PREVIOUS_CARTOON,\r\n  }\r\n}\r\n\r\nexport const displayNextCartoon = ( ) => {\r\n  return {\r\n    type: actionTypes.DISPLAY_NEXT_CARTOON,\r\n  }\r\n}\r\n\r\nexport const getLastCartoon = () => {\r\n  return {\r\n    type:actionTypes.GET_LASTCARTOON\r\n  }\r\n}\r\n\r\nexport const initLastCartoon = () => {\r\n  return dispatch => {\r\n    axios.get( 'https://raw.githubusercontent.com/nathanarohde/vfd_home_site/master/src/Cartoons/Cartoons.json' )\r\n        .then( response => {\r\n          dispatch( setLastCartoon(response.data.lastCartoon) );\r\n        })\r\n        .catch( error => {\r\n          console.log( error );\r\n        });\r\n  };\r\n};\r\n","export const GET_LASTCARTOON = 'GET_LASTCARTOON';\r\nexport const SET_LASTCARTOON = 'SET_LASTCARTOON';\r\nexport const SET_CURRENT_DISPLAYED_CARTOONS = 'SET_CURRENT_DISPLAYED_CARTOONS';\r\nexport const DISPLAY_PREVIOUS_CARTOON = 'DISPLAY_PREVIOUS_CARTOON';\r\nexport const DISPLAY_NEXT_CARTOON = 'DISPLAY_NEXT_CARTOON';\r\n","import React from 'react';\r\nimport Display from '../../Containers/Display/Display'\r\n\r\nconst main = (props) => {\r\n  return (\r\n    <main className=\"Wrapper\">\r\n      <Display/>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default main;\r\n","import React from 'react'\r\n\r\nconst thumbnail = (props) => {\r\n  let source = 'https://github.com/nathanarohde/vfd_home_site/blob/master/src/Cartoons/' + props.source + '/thumb.jpg?raw=true';\r\n\r\n  return (\r\n    <img className=\"thumbnail\" src={ source } alt=\"cartoon thumbnail\"/>\r\n  )\r\n}\r\n\r\nexport default thumbnail;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport Thumbnail from '../../Components/Thumbnail/Thumbnail';\r\nimport './Archive.css'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Archive extends Component {\r\n\r\n  getThumbnails = () => {\r\n    let thumbnails = []\r\n\r\n    for ( let i = this.props.lastCartoon; i > 0; i--) {\r\n      thumbnails.push(\r\n        <Link key={ i } to={`/${i}`}>\r\n          <Thumbnail key={ i } source={ i }/>\r\n        </Link>\r\n      )\r\n    }\r\n\r\n    return thumbnails;\r\n  }\r\n\r\n  render () {\r\n    return (\r\n        <div>\r\n          { this.props.lastCartoon !== 0 &&\r\n            <div>{ this.getThumbnails() }</div>\r\n          }\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    currentDisplayedCartoon: state.currentDisplayedCartoon,\r\n    lastCartoon: state.lastCartoon\r\n  }\r\n}\r\n\r\nexport default withRouter( connect(mapStateToProps) (Archive) );\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Store/actions';\r\n\r\nimport Header from '../../Components/Header/Header'\r\nimport Navigation from '../../Components/Navigation/Navigation'\r\nimport Main from '../../Components/Main/Main'\r\nimport Archive from '../Archive/Archive'\r\n\r\nclass Layout extends Component {\r\n  componentDidMount () {\r\n    this.props.onInitLastCartoon();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Header></Header>\r\n        <Navigation></Navigation>\r\n        <Switch>\r\n          <Route path=\"/archive\" component={Archive} />\r\n          <Route path=\"/:id\" component={Main} />\r\n          <Route path=\"/\" component={Main} />\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    lastCartoon: state.lastCartoon\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onInitLastCartoon: () => dispatch(actions.initLastCartoon())\r\n  }\r\n}\r\n\r\nexport default withRouter( connect (mapStateToProps, mapDispatchToProps)(Layout) );\r\n","import React, { Component } from 'react';\nimport Layout from './Containers/Layout/Layout'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Layout>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n","import * as actionTypes from './actionTypes';\r\nimport { updateObject } from './utility';\r\n\r\nconst initialState = {\r\n  currentDisplayedCartoon: 0,\r\n  lastCartoon: 0\r\n};\r\n\r\nconst displayPreviousCartoon = ( state ) => {\r\n  return updateObject( state, {\r\n    currentDisplayedCartoon: state.currentDisplayedCartoon - 1\r\n  });\r\n}\r\n\r\nconst displayNextCartoon = ( state ) => {\r\n  return updateObject( state, {\r\n    currentDisplayedCartoon: state.currentDisplayedCartoon + 1\r\n  })\r\n}\r\n\r\nconst setCurrentDisplayedCartoon = ( state, action ) => {\r\n  return updateObject( state, {\r\n    currentDisplayedCartoon: action.currentDisplayedCartoon\r\n  });\r\n}\r\n\r\nconst setLastCartoon = ( state, action ) => {\r\n  return updateObject( state, {\r\n    lastCartoon: action.lastCartoon\r\n  });\r\n}\r\n\r\nconst reducer = ( state = initialState, action ) => {\r\n  switch ( action.type ) {\r\n    case actionTypes.SET_LASTCARTOON: return setLastCartoon(state, action);\r\n    case actionTypes.DISPLAY_PREVIOUS_CARTOON: return displayPreviousCartoon(state, action);\r\n    case actionTypes.DISPLAY_NEXT_CARTOON: return displayNextCartoon(state, action);\r\n    case actionTypes.SET_CURRENT_DISPLAYED_CARTOONS: return setCurrentDisplayedCartoon(state, action);\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './Store/reducer';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore( reducer, composeEnhancers( applyMiddleware(thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render( app, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}